{"version":3,"sources":["components/appHeader/AppHeader.js","services/MarvelService.js","resources/img/mjolnir.png","components/spinner/Spinner.js","components/errorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","a","axios","get","res","getAllCharacters","offset","data","results","map","item","_transformCharacter","getCharacter","id","changeDescr","descr","cutDescr","length","slice","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","cx","cy","r","fill","attributeName","repeatCount","dur","calcMode","keyTimes","values","keySplines","begin","ErrorMessage","alignItems","justifyContent","textTransform","RandomChar","state","char","loading","error","marvelService","onCharLoaded","setState","onError","updateChar","Math","floor","random","then","catch","onTryIt","this","errorMessage","spinner","content","onClick","src","mjolnir","alt","React","Component","View","styleThumbnail","objectFit","CharList","chars","newItemLoading","charEnded","updateAllChars","onAllCharsLoading","onAllCharsLoaded","ended","itemRefs","setRef","ref","push","focusOnItem","forEach","classList","remove","add","focus","i","props","onCharSelected","disabled","Skeleton","CharInfo","charId","onCharLoading","prevProps","skeleton","comicsRender","console","log","ErrorBoundary","errorInfo","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.782d3afa.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","import axios from \"axios\"\r\n\r\nclass MarvelService {\r\n\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKey = 'apikey=c91f341a2dfaa43527cb63fbdfcd9b04';\r\n    _baseOffset = 210;\r\n\r\n    getResource = async (url) => {\r\n        let res = await axios.get(url);\r\n\r\n        return await res;\r\n    }\r\n\r\n    getAllCharacters = async (offset = this._baseOffset) => {\r\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n        return res.data.data.results.map(item => this._transformCharacter(item));\r\n    }\r\n\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n        return this._transformCharacter(res.data.data.results[0]);\r\n    }\r\n\r\n    changeDescr = (descr) => {\r\n        let cutDescr = descr;\r\n        if (!cutDescr) {\r\n            cutDescr = 'Description is missing...';\r\n        } else if (descr.length > 140) {\r\n            cutDescr = `${descr.slice(0, 140)}...`;\r\n        }\r\n        return cutDescr;\r\n    }\r\n\r\n    _transformCharacter = (res) => {\r\n        return {\r\n            id: res.id,\r\n            name: res.name,\r\n            descr: this.changeDescr(res.description),\r\n            thumbnail: res.thumbnail.path + '.' + res.thumbnail.extension,\r\n            homepage: res.urls[0].url,\r\n            wiki: res.urls[1].url,\r\n            comics: res.comics.items\r\n        }\r\n    }\r\n}\r\n\r\nexport default MarvelService;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","const Spinner = () => {\r\n    return(\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n        <circle cx=\"84\" cy=\"50\" r=\"10\" fill=\"#9f0013\">\r\n            <animate attributeName=\"r\" repeatCount=\"indefinite\" dur=\"0.25s\" calcMode=\"spline\" keyTimes=\"0;1\" values=\"10;0\" keySplines=\"0 0.5 0.5 1\" begin=\"0s\"></animate>\r\n            <animate attributeName=\"fill\" repeatCount=\"indefinite\" dur=\"1s\" calcMode=\"discrete\" keyTimes=\"0;0.25;0.5;0.75;1\" values=\"#9f0013;#232222;#9f0013;#5c5c5c;#9f0013\" begin=\"0s\"></animate>\r\n        </circle><circle cx=\"16\" cy=\"50\" r=\"10\" fill=\"#9f0013\">\r\n        <animate attributeName=\"r\" repeatCount=\"indefinite\" dur=\"1s\" calcMode=\"spline\" keyTimes=\"0;0.25;0.5;0.75;1\" values=\"0;0;10;10;10\" keySplines=\"0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1\" begin=\"0s\"></animate>\r\n        <animate attributeName=\"cx\" repeatCount=\"indefinite\" dur=\"1s\" calcMode=\"spline\" keyTimes=\"0;0.25;0.5;0.75;1\" values=\"16;16;16;50;84\" keySplines=\"0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1\" begin=\"0s\"></animate>\r\n        </circle><circle cx=\"50\" cy=\"50\" r=\"10\" fill=\"#5c5c5c\">\r\n        <animate attributeName=\"r\" repeatCount=\"indefinite\" dur=\"1s\" calcMode=\"spline\" keyTimes=\"0;0.25;0.5;0.75;1\" values=\"0;0;10;10;10\" keySplines=\"0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1\" begin=\"-0.25s\"></animate>\r\n        <animate attributeName=\"cx\" repeatCount=\"indefinite\" dur=\"1s\" calcMode=\"spline\" keyTimes=\"0;0.25;0.5;0.75;1\" values=\"16;16;16;50;84\" keySplines=\"0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1\" begin=\"-0.25s\"></animate>\r\n        </circle><circle cx=\"84\" cy=\"50\" r=\"10\" fill=\"#9f0013\">\r\n        <animate attributeName=\"r\" repeatCount=\"indefinite\" dur=\"1s\" calcMode=\"spline\" keyTimes=\"0;0.25;0.5;0.75;1\" values=\"0;0;10;10;10\" keySplines=\"0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1\" begin=\"-0.5s\"></animate>\r\n        <animate attributeName=\"cx\" repeatCount=\"indefinite\" dur=\"1s\" calcMode=\"spline\" keyTimes=\"0;0.25;0.5;0.75;1\" values=\"16;16;16;50;84\" keySplines=\"0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1\" begin=\"-0.5s\"></animate>\r\n        </circle><circle cx=\"16\" cy=\"50\" r=\"10\" fill=\"#232222\">\r\n        <animate attributeName=\"r\" repeatCount=\"indefinite\" dur=\"1s\" calcMode=\"spline\" keyTimes=\"0;0.25;0.5;0.75;1\" values=\"0;0;10;10;10\" keySplines=\"0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1\" begin=\"-0.75s\"></animate>\r\n        <animate attributeName=\"cx\" repeatCount=\"indefinite\" dur=\"1s\" calcMode=\"spline\" keyTimes=\"0;0.25;0.5;0.75;1\" values=\"16;16;16;50;84\" keySplines=\"0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1;0 0.5 0.5 1\" begin=\"-0.75s\"></animate>\r\n        </circle></svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","const ErrorMessage = () => {\r\n    return (\r\n        <div style={{display : 'flex', alignItems: 'center', justifyContent: 'center', textTransform: 'uppercase'}}>Page not found</div>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import React from 'react';\nimport MarvelService from '../../services/MarvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nclass RandomChar extends React.Component {\n\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    onCharLoaded = (res) => {\n        this.setState({char: res, loading: false})\n    }\n\n    onError = () => {\n        this.setState({loading: false, error: true})\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1010789 - 1009146) + 1009146);\n        this.marvelService\n        .getCharacter(id)\n        .then(this.onCharLoaded)\n        .catch(this.onError);\n    }\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    onTryIt = () => {\n        this.setState({char: {}, loading: true, error: false});\n        this.updateChar();\n    }\n\n    render() {\n        const {char, loading, error} = this.state;\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || error) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button onClick={this.onTryIt} className=\"button button__main\">\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {thumbnail, name, descr, homepage, wiki} = char;\n    let styleThumbnail;\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        styleThumbnail = <img style={{objectFit: 'contain'}} src={thumbnail} alt=\"Random character\" className=\"randomchar__img\"/>;\n    } else {\n        styleThumbnail = <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\"/>;\n    }\n        return (\n            <div className=\"randomchar__block\">\n                    {styleThumbnail}\n                    <div className=\"randomchar__info\">\n                        <p className=\"randomchar__name\">{name}</p>\n                        <p className=\"randomchar__descr\">\n                            {descr}\n                        </p>\n                        <div className=\"randomchar__btns\">\n                            <a href={homepage} className=\"button button__main\">\n                                <div className=\"inner\">homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n        )\n}\n\nexport default RandomChar;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './charList.scss';\n\nclass CharList extends React.Component {\n\n    state = {\n        chars: [],\n        loading: true,\n        error: false,\n        newItemLoading: false,\n        offset: 210,\n        charEnded: false\n    }\n\n    marvelService = new MarvelService();\n\n    updateAllChars = (offset) => {\n        this.onAllCharsLoading();\n        this.marvelService.getAllCharacters(offset)\n        .then(this.onAllCharsLoaded)\n        .catch(this.onError);\n    }\n\n    onAllCharsLoading = () => {\n        this.setState({newItemLoading: true})\n    }\n\n    onAllCharsLoaded = (res) => {\n        let ended = false;\n        if (res.length < 9) {\n            ended = true\n        }\n\n\n        this.setState(({chars, offset}) => ({\n            chars: [...chars, ...res], \n            loading: false, \n            newItemLoading: false,\n            offset: offset + 9,\n            charEnded: ended\n        }))\n    }\n\n    onError = () => {\n        this.setState({loading: false, error: true})\n    }\n\n    componentDidMount() {\n        this.updateAllChars();\n    }\n\n    itemRefs = [];\n\n    setRef = (ref) => {\n        this.itemRefs.push(ref);\n    }\n\n    focusOnItem = (id) => {\n        this.itemRefs.forEach(item => item.classList.remove('char__item_selected'));\n        this.itemRefs[id].classList.add('char__item_selected');\n        this.itemRefs[id].focus();\n    }\n\n    render() {\n        const {chars, loading, error, newItemLoading, offset, charEnded} = this.state;\n        const char = chars.map((item, i) => {\n            let styleThumbnail = item.thumbnail;\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                styleThumbnail = <img style={{objectFit: 'unset'}} src={item.thumbnail} alt=\"abyss\"/>;\n            } else {\n            styleThumbnail = <img src={item.thumbnail} alt=\"abyss\"/>;\n            }\n            return (\n                <li ref={this.setRef}\n                    key={item.id} \n                    className=\"char__item\"\n                    onClick={() => {\n                        this.props.onCharSelected(item.id);\n                        this.focusOnItem(i);\n                    }}>\n                        {styleThumbnail}\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        })\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || error) ? char : null;\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                <ul className=\"char__grid\">\n                {content}\n                </ul>\n                <button \n                    className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    style={{'display': charEnded ? 'none' : 'block'}}\n                    onClick={() => this.updateAllChars(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nclass CharInfo extends React.Component {\n\n    state = {\n        char: null,\n        loading: false,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }\n    }\n\n    updateChar = () => {\n        const charId = this.props.charId;\n        if(!charId) {\n            return;\n        }\n\n        this.onCharLoading();\n\n        this.marvelService\n            .getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n\n        // this.foo.bar = 0;\n    }\n\n    onCharLoaded = (res) => {\n        this.setState({char: res, loading: false})\n    }\n\n    onError = () => {\n        this.setState({loading: false, error: true})\n    }\n\n    onCharLoading = () => {\n        this.setState({loading: true})\n    }\n\n    render() {\n        const {char, loading, error} = this.state;\n        const skeleton = char || loading || error ? null : <Skeleton />\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || error || !char) ? <View char={char}/> : null;\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, descr, thumbnail, homepage, wiki, comics} = char;\n\n    let styleThumbnail;\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        styleThumbnail = <img style={{objectFit: 'contain'}} src={thumbnail} alt={name}/>;\n    } else {\n        styleThumbnail = <img src={thumbnail} alt={name}/>;\n    }\n\n    const comicsRender = comics.map((item, i) => {\n        if (i <= 9) {\n            console.log(comics.length)\n            return (\n                <li key={i} className=\"char__comics-item\">\n                    {item.name}\n                </li>\n            )\n        }\n    })\n    return (\n        <>\n            <div className=\"char__basics\">\n                {styleThumbnail}\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {descr}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'Comics are not available'}\n                {comicsRender}\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import React from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n} \r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import React from \"react\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends React.Component {\n\n    state = {\n        selectedChar: null\n    }\n\n    onCharSelected = (id) => {\n        this.setState({selectedChar: id})\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar/>\n                    </ErrorBoundary>\n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                            <CharList onCharSelected={this.onCharSelected}/>\n                        </ErrorBoundary>\n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedChar}/>\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}